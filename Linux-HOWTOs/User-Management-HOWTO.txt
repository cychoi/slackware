=====================
User Management HOWTO (c) Nicolas Kovacs <info@microlinux.fr>
=====================

Dernière révision : 4 mars 2014

Ce HOWTO décrit la gestion des utilisateurs sur un système Slackware Linux.


  * Les systèmes multi-utilisateurs
  * Ajouter de nouveaux utilisateurs 
  * Utiliser vs. administrer
  * Changer d'identité et devenir root
  * Savoir qui l'on est
  * En savoir un peu plus sur les utilisateurs


Les systèmes multi-utilisateurs
-------------------------------

Linux est un vrai système multi-utilisateurs, tout comme son ancêtre Unix.
Pour comprendre la portée de cette assertion, imaginez un poste de travail
comme on peut en trouver dans la salle informatique d'une grande université,
fréquentée par une bonne dizaine de milliers d'étudiants. Chaque étudiant
inscrit a le droit d'utiliser les machines de la salle informatique. Il
possède donc son identifiant personnel et son mot de passe, qui lui permettent
de se connecter à une machine de la salle informatique pour y travailler,
c'est-à-dire effectuer ses recherches, écrire ses devoirs, rédiger son mémoire
ou sa thèse, etc. Une telle installation doit répondre à quelques exigences :

  - chaque utilisateur du système doit disposer de son répertoire personnel,
    c'est-à-dire d'un endroit pour lui seul, utilisable par lui seul, où il
    peut stocker toutes ses données ;

  - la confidentialité doit être assurée, c'est-à-dire qu'un étudiant connecté
    ne pourra pas aller fouiner librement dans les données de ses collègues ;

  - il ne faut pas non plus qu'un utilisateur puisse effacer par mégarde (ou
    même intentionnellement) les données qui ne lui appartiennent pas ;

  - enfin, l'intégrité du système ne doit en aucun cas être mise en péril par
    les utilisateurs.

Une configuration personnelle sera probablement plus modeste qu'une série de
postes de travail dans la salle informatique d'une université ; il n'empêche
que l'approche multi-utilisateur est tout aussi pertinente, même pour un usage
strictement domestique. Après tout, peu importe si le système gère deux ou
trois utilisateurs ou vingt-cinq mille. 

Techniquement parlant, le seul détail qui différencierait une installation
domestique d'un poste de travail à la Faculté des sciences, ce serait la
configuration itinérante des profils d'utilisateurs. Dans une telle
configuration, l'ensemble des données, les identifiants de connexion et les
mots de passe sont stockés de façon centralisée sur un serveur. À partir de
là, chaque étudiant peut se connecter sur n'importe quelle machine de la salle
et retrouver son environnement, alors que sur votre poste de travail à la
maison, chaque compte d'utilisateur restera lié à la machine locale.


Ajouter de nouveaux utilisateurs 
--------------------------------

Lors de la configuration post-installation de notre système (voir le
Chicken-Install-HOWTO), j'ai défini un premier utilisateur du "commun des
mortels" pour la machine. Ce qui signifie que ma machine en compte déjà au
moins deux : l'administrateur root et l'utilisateur en question (kikinovak).

Si vous êtes plusieurs à vous servir de la même machine dans votre foyer, il
est judicieux de prévoir un compte individuel pour chaque utilisateur afin de
garantir la confidentialité des données et de permettre à chacun de configurer
son environnement de travail personnalisé sans empiéter sur celui de la
copine, du copain, des colocataires ou des autres membres de la famille.

En dehors de mon utilisateur initial, je vais créer quelques utilisateurs
supplémentaires, par exemple :

  - Laurène Gibaud (lgibaud)
  - Muriel Shan Sei Fan (mshanseifan)
  - Gaston Lagaffe (glagaffe)
  - Jean-Kevin Tartempion (jktartempion)

Chacun des utilisateurs sera créé à l'aide de la commande interactive
'adduser', la même commande qui nous a servi à créer notre utilisateur
initial.  L'invocation de cette commande requiert des droits d'administrateur.
Dans un premier temps, nous allons acquérir ces droits de façon peu élégante,
avec les moyens de bord. Si vous êtes en mode graphique, ouvrez une console
virtuelle : [Ctrl]+[Alt]+[F6]. Alternativement, si vous êtes en mode console,
déconnectez l'utilisateur :

  $ logout

Ensuite, connectez-vous en tant que root : 

  slackbox login: root

Lancez la création de votre utilisateur :

  root@slackbox:~# adduser 

Saisissez l'identifiant du nouvel utilisateur :

  Login name for new user []: lgibaud

Appuyez sur [Entrée] pour confirmer la définition automatique du numéro
identifiant :

  User ID ('UID') [ defaults to next available ]:

Faites de même pour le groupe initial de l'utilisateur :

  Initial group [ users ]: 

La prochaine étape concerne l'appartenance aux groupes supplémentaires.
Appuyez sur [FlècheHaut] ("UP arrow key") pour faire apparaître la liste des
groupes supplémentaires, puis confirmez par [Entrée] :

  Press ENTER to continue without adding any additional groups 
  Or press the UP arrow key to add/select/edit additional groups 
  :  audio cdrom floppy plugdev video power netdev lp scanner 

Acceptez les valeurs par défaut proposées dans les trois prochaines étapes :

  - l'emplacement du répertoire utilisateur (/home/lgibaud) ;
  - le choix de l'interpréteur de commandes (/bin/bash) ;
  - la date d'expiration du compte (jamais). 

Après confirmation, 'adduser' affiche le récapitulatif suivant :

  New account will be created as follows: 

  --------------------------------------- 
  Login name.......:  lgibaud 
  UID..............:  [ Next available ] 
  Initial group....:  users 
  Additional groups:  audio,cdrom,floppy,plugdev,video,power,
                      netdev,lp,scanner 
  Home directory...:  /home/lgibaud 
  Shell............:  /bin/bash 
  Expiry date......:  [ Never ] 

  This is it... if you want to bail out, hit Control-C.  Otherwise, press 
  ENTER to go ahead and make the account. 

Appuyez sur [Entrée] pour lancer la création du compte :

  Creating new account... 

Saisissez le nom complet ("full name") de l'utilisateur. Ici, vous êtes libres
d'utiliser les voyelles accentuées et autres caractères spéciaux comme bon
vous semble :

  Changing the user information for lgibaud 
  Enter the new value, or press ENTER for the default 
  Full Name []: Laurène Gibaud

Les informations subséquentes sont facultatives, et vous pouvez parfaitement
les ignorer en appuyant plusieurs fois de suite sur [Entrée] :

  Room Number []: 
  Work Phone []: 
  Home Phone []: 
  Other []: 

Pour terminer, définissez le mot de passe : 

  Changing password for lgibaud 
  Enter the new password (minimum of 5 characters) 
  Please use a combination of upper and lower case letters and numbers. 
  New password: ********
  Re-enter new password: ********
  passwd: password changed. 
  Account setup complete.

Procédez de même pour créer les autres utilisateurs de la machine.


Utiliser vs. administrer
------------------------

Lorsque nous utilisons le système, nous travaillons en tant que simples
utilisateurs pour créer, éditer, visualiser, déplacer, copier et effacer des
fichiers. Ces tâches ne mettent pas en péril le fonctionnement du système ou
les données des autres utilisateurs, et ne nécessitent par conséquent aucun
privilège spécifique. Il n'en est plus de même pour la gestion des
utilisateurs, qui comprend entre autres choses :

  - la création d'un nouvel utilisateur ;

  - la définition de son mot de passe ;

  - la configuration de ses droits : à quoi aura-t-il accès dans le système ?

  - la suppression éventuelle de l'utilisateur ainsi que de toutes ses
    données.


Changer d'identité et devenir root
----------------------------------

Lors de l'installation du système, nous avons défini un mot de passe pour
l'utilisateur root. Un peu plus haut, nous avons eu besoin des privilèges de
root pour créer quelques utilisateurs supplémentaires, et nous avons "fait le
tour de la croix avec l'église" pour acquérir ces privilèges. Or, il existe
un moyen bien plus simple pour acquérir les privilèges de cet utilisateur
spécial, en devenant root grâce à la commande 'su' ("switch user", c'est-à-dire
"changer d'utilisateur"). Ouvrez un terminal et tapez ceci, en saisissant
votre mot de passe lorsque le système vous le demande :

  bash-4.2$ su - 
  Mot de passe : 
  root@slackbox:~# 

Notez le tiret '-' qui suit la commande 'su'. Il précise qu'il faut devenir root
en récupérant toutes les variables d'environnement de root. Ne vous triturez
pas le cerveau si vous n'avez pas la moindre idée de ce que cela peut bien
vouloir signifier, nous y viendrons. Contentez-vous pour l'instant de savoir
que pour devenir Dieu sur votre machine, il vous suffit de faire :

  bash-4.2$ su - 
  Mot de passe :

  /!\ Une mise en garde solennelle s'impose. En acquérant les droits de root,
  vous voilà en quelque sorte détenteur du fameux bouton rouge. Cela ne veut
  pas dire que vous allez forcément déclencher une guerre nucléaire, mais une
  simple commande bien sentie suffirait à enclencher une apocalypse numérique
  sur votre système. En un mot : prudence. Et gare aux fautes de frappe.

S'il est utile de savoir comment acquérir les pleins pouvoirs sur la machine,
il est tout aussi utile de savoir comment revenir en sens inverse pour se
débarrasser de tous ces super-pouvoirs vaguement inquiétants lorsqu'on n'en a
plus besoin. Dans ce cas, c'est exactement la même commande que pour quitter
une session dans la console. Vous avez donc le choix :

  1. logout

  2. exit

  3. [Ctrl]+[D]


Savoir qui l'on est
-------------------

La commande 'su' ("switch user") ne nous permet pas seulement de devenir root. Si
le système dispose d'un utilisateur glagaffe, je pourrais très bien devenir
glagaffe en invoquant la commande suivante (et en saisissant ensuite son mot
de passe) :

  bash-4.2$ su - glagaffe 
  Mot de passe : 
  glagaffe@slackbox:~$

Là encore, notez l'utilisation du tiret '-' pour indiquer que vous souhaitez
devenir un autre utilisateur en utilisant les variables d'environnement de
celui-ci. 

L'invite de commandes (glagaffe@slackbox :~$) nous indique qu'un changement
d'identité a fort probablement eu lieu. Pour en être sûr, nous avons tout
loisir de demander à notre système qui nous sommes, grâce à la commande
'whoami' ("Qui suis-je ?"). Voici une petite démonstration pratique :

  bash-4.2$ su - glagaffe 
  Mot de passe : 
  glagaffe@slackbox:~$ whoami
  glagaffe 
  glagaffe@slackbox:~$ exit
  logout
  bash-4.2$ whoami
  kikinovak
  bash-4.2$ su -
  Mot de passe : 
  root@slackbox:~# whoami
  root
  root@slackbox:~# exit
  logout
  bash-4.2$ whoami
  kikinovak

D'ailleurs, si j'invoque 'su' sans autre argument que le tiret, cela revient
exactement à la même chose que de faire ceci :

  bash-4.2$ su - root 
  Mot de passe : 
  root@slackbox:~#


En savoir un peu plus sur les utilisateurs
------------------------------------------

Chacun des utilisateurs que nous avons créés jusqu'ici possède un certain
nombre de caractéristiques : son UID unique, son GID, les groupes secondaires
auxquels il appartient, son répertoire utilisateur, son shell de connexion,
etc. Voyons maintenant comment afficher ces différentes infos. Commençons par
nous-mêmes, en utilisant la commande 'id' :

  bash-4.2$ id
  uid=1000(kikinovak) gid=100(users) groupes=100(users),7(lp),
  11(floppy),17(audio),18(video),19(cdrom),83(plugdev),84(power),
  86(netdev),93(scanner)

Invoquée sans autre argument, la commande 'id' nous affiche l'UID de
l'utilisateur, son GID, ainsi que la liste complète des groupes secondaires
auxquels l'utilisateur est affecté. Les options vont me permettre de cibler
les infos.

Afficher l'UID ("User Identification") de l'utilisateur :

  bash-4.2$ id -u
  1000

Afficher le GID (Group Identification) :

  bash-4.2$ id -g
  100

Si le dernier résultat n'est pas très parlant, l'option '-n' affichera le nom
du groupe correspondant :

  bash-4.2$ id -gn
  users

L'option -G fournit la liste complète de tous les groupes dont l'utilisateur
est membre :

  bash-4.2$ id -G
  100 7 11 17 18 19 83 84 86 93

Là encore, j'obtiendrai un résultat plus parlant en ajoutant l'option '-n' :

  bash-4.2$ id -Gn
  users lp floppy audio video cdrom plugdev power netdev scanner

Évidemment, personne ne vous demande de retenir toutes ces options par coeur.
N'oubliez pas que vous avez la page du manuel pour cela :

  bash-4.2$ man id

Différents chemins mènent à Saint-Bauzille-de-Montmel. La commande 'groups'
affiche exactement les mêmes infos que la commande précédente :

  bash-4.2$ groups
  users lp floppy audio video cdrom plugdev power netdev scanner

Pour en savoir plus sur les autres utilisateurs du système, il suffit de
fournir leur nom en argument. Ces infos sont accessibles à tous les
utilisateurs non privilégiés du système. Ce n'est donc pas la peine de devenir
root pour obtenir ce genre d'infos :

  bash-4.2$ id lgibaud
  uid=1001(lgibaud) gid=100(users) groupes=100(users),7(lp),
  11(floppy),17(audio),18(video),19(cdrom),83(plugdev),84(power),
  86(netdev),93(scanner)

Les arguments et les options peuvent évidemment être combinés à souhait, par
exemple pour afficher l'UID d'un autre utilisateur :

  bash-4.2$ id -u lgibaud
  1001

Enfin, la commande 'finger' permet également d'en savoir un peu plus sur les
utilisateurs du système. Elle nous renseigne entre autres choses sur le
répertoire utilisateur, le shell de connexion et le nom complet de
l'utilisateur fourni en argument :

  bash-4.2$ finger lgibaud
  Login: lgibaud             Name: Laurène Gibaud
  Directory: /home/lgibaud   Shell: /bin/bash
  ...


------------------------------------------------------------------------------
# vim: syntax=txt
# vim: set encoding=latin1
